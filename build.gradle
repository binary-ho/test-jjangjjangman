buildscript {
	ext {
		springBootVersion = '2.7.12'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
		classpath "io.spring.gradle:dependency-management-plugin:1.0.11.RELEASE"
	}
}

subprojects {
	apply plugin: 'java'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'

	group = 'com.binaryho'
	version = '0.0.1-SNAPSHOT'

	java {
		sourceCompatibility = '11'
	}

	repositories {
		mavenCentral()
	}

	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter'
		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

		/* Test */
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		testImplementation 'org.mockito:mockito-core:5.3.1'
		testImplementation 'org.mockito:mockito-junit-jupiter:5.3.1'


		/* Lombok */
		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'

		runtimeOnly 'com.h2database:h2'
	}

	tasks.named('test') {
		useJUnitPlatform()
	}
}

project(':whiteship') {
	bootJar { enabled = false }
	jar { enabled = true }

	dependencies {
	}
}

project(':mockito-practice') {
	bootJar { enabled = true }
	jar { enabled = false }

	dependencies {
		implementation  project(':whiteship')
	}
}

project('test-code-with-architecture-1') {
	bootJar { enabled = true }
	jar { enabled = false }

	dependencies {

		implementation 'org.springframework.boot:spring-boot-starter-web'
		implementation 'org.springframework.boot:spring-boot-starter-mail'
		implementation 'org.springframework.boot:spring-boot-starter-validation'
		runtimeOnly 'com.mysql:mysql-connector-j'
		implementation 'com.fasterxml.jackson.core:jackson-core:2.14.1'
		implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.14.1'
		implementation 'org.springdoc:springdoc-openapi-ui:1.5.12'
		implementation 'org.springdoc:springdoc-openapi-ui:1.5.12'
	}
}
